-- ===================================================================
-- CREACIÓN DE TABLAS (Modelo ER Académico)
-- Usuario: PBASES
-- ===================================================================

-- FACULTAD
CREATE TABLE facultad (
  facu_ID             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  facu_Nombre         VARCHAR2(150) NOT NULL,
  facu_Descripcion    VARCHAR2(4000),
  facu_Fecha_Creacion DATE DEFAULT SYSDATE,
  facu_Activa         CHAR(1) DEFAULT 'S' CHECK (facu_Activa IN ('S','N'))
) TABLESPACE ts_academico;

-- PROGRAMA
CREATE TABLE programa (
  prog_ID             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  facu_ID             NUMBER NOT NULL,
  prog_Codigo         VARCHAR2(50) UNIQUE,
  prog_Nombre         VARCHAR2(200) NOT NULL,
  prog_Total_Creditos NUMBER(5),
  prog_Tipo           VARCHAR2(50),
  prog_Modalidad      VARCHAR2(50),
  prog_Duracion_Semestres NUMBER(3),
  prog_Activo         CHAR(1) DEFAULT 'S' CHECK (prog_Activo IN ('S','N')),
  prog_Fecha_Creacion DATE DEFAULT SYSDATE,
  CONSTRAINT fk_programa_facultad FOREIGN KEY(facu_ID) REFERENCES facultad(facu_ID)
) TABLESPACE ts_academico;

-- ASIGNATURA
CREATE TABLE asignatura (
  asig_ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  prog_ID                 NUMBER NOT NULL,
  asig_Codigo             VARCHAR2(50) UNIQUE,
  asig_Nombre             VARCHAR2(200) NOT NULL,
  asig_Creditos           NUMBER(3) CHECK (asig_Creditos > 0),
  asig_Horas_Semanales    NUMBER(3),
  asig_Tipo               VARCHAR2(50),
  asig_Semestre_Sugerido  NUMBER(2),
  asig_Descripcion        VARCHAR2(4000),
  asig_Activa             CHAR(1) DEFAULT 'S' CHECK (asig_Activa IN ('S','N')),
  CONSTRAINT fk_asignatura_programa FOREIGN KEY(prog_ID) REFERENCES programa(prog_ID)
) TABLESPACE ts_academico;

-- PRERREQUISITO
CREATE TABLE prerrequisito (
  req_ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asig_ID                NUMBER NOT NULL,
  asig_Requisito_ID      NUMBER NOT NULL,
  prerreq_Tipo           VARCHAR2(100),
  prerreq_Creditos_Minimos NUMBER(3),
  prerreq_Nota_minima    NUMBER(5,2),
  CONSTRAINT fk_prerreq_asig FOREIGN KEY(asig_ID) REFERENCES asignatura(asig_ID),
  CONSTRAINT fk_prerreq_req FOREIGN KEY(asig_Requisito_ID) REFERENCES asignatura(asig_ID)
) TABLESPACE ts_academico;

-- SEDE
CREATE TABLE sede (
  sede_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sede_Nombre   VARCHAR2(200) NOT NULL,
  sede_Direccion VARCHAR2(400),
  sede_Ciudad   VARCHAR2(100),
  sede_Telefono VARCHAR2(50),
  sede_Activa   CHAR(1) DEFAULT 'S' CHECK (sede_Activa IN ('S','N'))
) TABLESPACE ts_academico;

-- SALON
CREATE TABLE salon (
  salon_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sede_ID             NUMBER NOT NULL,
  salon_Codigo        VARCHAR2(50) UNIQUE,
  salon_Nombre        VARCHAR2(200),
  salon_Capacidad_Max NUMBER(6),
  salon_Tipo          VARCHAR2(100),
  salon_Equipamiento  VARCHAR2(4000),
  salon_Activo        CHAR(1) DEFAULT 'S' CHECK (salon_Activo IN ('S','N')),
  CONSTRAINT fk_salon_sede FOREIGN KEY(sede_ID) REFERENCES sede(sede_ID)
) TABLESPACE ts_academico;

-- ESTUDIANTE
CREATE TABLE estudiante (
  est_ID                    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  prog_ID                   NUMBER,
  sede_ID                   NUMBER,
  est_Documento             VARCHAR2(50),
  est_Tipo_Documento        VARCHAR2(20),
  est_Nombres               VARCHAR2(200),
  est_Apellidos             VARCHAR2(200),
  est_Correo_Institucional  VARCHAR2(200) UNIQUE,
  est_Telefono              VARCHAR2(50),
  est_Fecha_Nacimiento      DATE,
  est_Genero                VARCHAR2(20),
  est_Fecha_Ingreso         DATE,
  est_Estado                VARCHAR2(50),
  est_Creditos_Aprobados    NUMBER(6),
  est_Promedio_Acumulado    NUMBER(5,2),
  est_Nivel_Riesgo          VARCHAR2(50),
  est_Periodo_Ingreso       NUMBER,
  CONSTRAINT fk_est_prog FOREIGN KEY(prog_ID) REFERENCES programa(prog_ID),
  CONSTRAINT fk_est_sede FOREIGN KEY(sede_ID) REFERENCES sede(sede_ID)
) TABLESPACE ts_academico;

-- PERIODO
CREATE TABLE periodo (
  periodo_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  periodo_Codigo        VARCHAR2(50) UNIQUE,
  periodo_Fecha_Inicio  DATE,
  periodo_Fecha_Fin     DATE,
  periodo_Inicio_Matriculas DATE,
  periodo_Fin_Matriculas DATE,
  periodo_Inicio_Clases DATE,
  periodo_Fin_Clases    DATE,
  periodo_Cierre_Notas  DATE,
  periodo_Estado        VARCHAR2(50)
) TABLESPACE ts_academico;

-- MATRICULA
CREATE TABLE matricula (
  matricula_ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  est_ID                      NUMBER NOT NULL,
  periodo_ID                  NUMBER NOT NULL,
  matricula_Fecha             DATE DEFAULT SYSDATE,
  matricula_Estado            VARCHAR2(50),
  matricula_Creditos_Inscritos NUMBER(5),
  matricula_Valor             NUMBER(12,2),
  matricula_Tipo              VARCHAR2(50),
  CONSTRAINT fk_mat_est FOREIGN KEY(est_ID) REFERENCES estudiante(est_ID),
  CONSTRAINT fk_mat_periodo FOREIGN KEY(periodo_ID) REFERENCES periodo(periodo_ID)
) TABLESPACE ts_academico;

-- GRUPO
CREATE TABLE grupo (
  grupo_ID               NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asig_ID                NUMBER NOT NULL,
  periodo_ID             NUMBER NOT NULL,
  salon_ID               NUMBER,
  grupo_Codigo           VARCHAR2(50) UNIQUE,
  grupo_Cupo_Maximo      NUMBER(6),
  grupo_Cupos_Disponibles NUMBER(6),
  grupo_Estado           VARCHAR2(50),
  CONSTRAINT fk_grupo_asig FOREIGN KEY(asig_ID) REFERENCES asignatura(asig_ID),
  CONSTRAINT fk_grupo_periodo FOREIGN KEY(periodo_ID) REFERENCES periodo(periodo_ID),
  CONSTRAINT fk_grupo_salon FOREIGN KEY(salon_ID) REFERENCES salon(salon_ID)
) TABLESPACE ts_academico;

-- HORARIO
CREATE TABLE horario (
  horario_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  grupo_ID           NUMBER NOT NULL,
  horario_Dias_Semana VARCHAR2(50),
  horario_Hora_Inicio VARCHAR2(10),
  horario_Hora_Fin    VARCHAR2(10),
  horario_Tipo_Clase  VARCHAR2(50),
  CONSTRAINT fk_horario_grupo FOREIGN KEY(grupo_ID) REFERENCES grupo(grupo_ID)
) TABLESPACE ts_academico;

-- DOCENTE
CREATE TABLE docente (
  docente_ID               NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  docente_Documento        VARCHAR2(50) UNIQUE,
  docente_Tipo_Documento   VARCHAR2(20),
  docente_Nombres          VARCHAR2(200),
  docente_Apellidos        VARCHAR2(200),
  docente_Correo_Institucional VARCHAR2(200) UNIQUE,
  docente_Telefono         VARCHAR2(50),
  docente_Fecha_Nacimiento DATE,
  docente_Genero           VARCHAR2(20),
  docente_Fecha_Vinculacion DATE,
  docente_Tipo_Vinculacion VARCHAR2(50),
  docente_Estado           VARCHAR2(50),
  docente_Horas_Minimas    NUMBER(5),
  docente_Horas_Maximas    NUMBER(5)
) TABLESPACE ts_academico;

-- GRUPO_DOCENTE
CREATE TABLE grupo_docente (
  grupo_Docente_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  docente_ID          NUMBER NOT NULL,
  grupo_ID            NUMBER NOT NULL,
  grupo_Docente_Tipo  VARCHAR2(100),
  grupo_Docente_Horas_As VARCHAR2(100),
  grupo_Docente_Fecha_As DATE,
  CONSTRAINT fk_gd_docente FOREIGN KEY(docente_ID) REFERENCES docente(docente_ID),
  CONSTRAINT fk_gd_grupo FOREIGN KEY(grupo_ID) REFERENCES grupo(grupo_ID)
) TABLESPACE ts_academico;

-- FORMACION_DOCENTE
CREATE TABLE formacion_docente (
  formacion_Docente_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  docente_ID             NUMBER NOT NULL,
  formacion_Docente_Titulo VARCHAR2(200),
  formacion_Docente_Institucion VARCHAR2(200),
  formacion_Docente_Nivel VARCHAR2(100),
  formacion_Docente_Año_Graduacion NUMBER(4),
  formacion_Docente_Area_Conocimientos VARCHAR2(4000),
  CONSTRAINT fk_form_docente FOREIGN KEY(docente_ID) REFERENCES docente(docente_ID)
) TABLESPACE ts_academico;

-- DETALLE_MATRICULA
CREATE TABLE detalle_matricula (
  detalle_Mat_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  matricula_ID              NUMBER NOT NULL,
  grupo_ID                  NUMBER NOT NULL,
  detalle_Mat_Fecha_Inscripcion DATE,
  detalle_Mat_Estado        VARCHAR2(50),
  detalle_Mat_Tipo          VARCHAR2(50),
  detalle_Mat_Numero_Intento NUMBER(3),
  detalle_Mat_Motivo_Retiro VARCHAR2(4000),
  CONSTRAINT fk_detmat_mat FOREIGN KEY(matricula_ID) REFERENCES matricula(matricula_ID),
  CONSTRAINT fk_detmat_grupo FOREIGN KEY(grupo_ID) REFERENCES grupo(grupo_ID)
) TABLESPACE ts_academico;

-- NOTA_PARCIAL
CREATE TABLE nota_parcial (
  nota_Parcial_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  detalle_Mat_ID        NUMBER NOT NULL,
  regla_ID              NUMBER,
  nota_Parcial_Nota     NUMBER(5,2),
  nota_Parcial_Fecha_Ingreso DATE,
  docente_ID            NUMBER,
  nota_Parcial_detalles VARCHAR2(4000),
  CONSTRAINT fk_npar_detmat FOREIGN KEY(detalle_Mat_ID) REFERENCES detalle_matricula(detalle_Mat_ID),
  CONSTRAINT fk_npar_docente FOREIGN KEY(docente_ID) REFERENCES docente(docente_ID)
) TABLESPACE ts_academico;

-- REGLA (para soporte de nota_parcial)
CREATE TABLE regla (
  regla_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  regla_Codigo VARCHAR2(100),
  regla_Descripcion VARCHAR2(4000)
) TABLESPACE ts_academico;

-- NOTA_DEFINITIVA
CREATE TABLE nota_definitiva (
  definitiva_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  detalle_Mat_ID       NUMBER NOT NULL,
  definitiva_Nota_Final NUMBER(5,2),
  definitiva_Estado    VARCHAR2(50),
  definitiva_Fecha_Cierre DATE,
  definitiva_Nota_Cerrada NUMBER(5,2),
  definitiva_Detalles  VARCHAR2(4000),
  CONSTRAINT fk_def_detmat FOREIGN KEY(detalle_Mat_ID) REFERENCES detalle_matricula(detalle_Mat_ID)
) TABLESPACE ts_academico;

-- HISTORIAL_RIESGO
CREATE TABLE historial_riesgo (
  riesgo_ID              NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  est_ID                 NUMBER NOT NULL,
  periodo_ID             NUMBER,
  riesgo_Nivel_Anterior  VARCHAR2(50),
  riesgo_Nivel_Actual    VARCHAR2(50),
  riesgo_Promedio_Periodo NUMBER(5,2),
  riesgo_Materias_Perdidas NUMBER(5),
  riesgo_Materias_Repite  NUMBER(5),
  riesgo_Observaciones   VARCHAR2(4000),
  riesgo_Fecha_calculo   DATE,
  CONSTRAINT fk_riesgo_est FOREIGN KEY(est_ID) REFERENCES estudiante(est_ID),
  CONSTRAINT fk_riesgo_periodo FOREIGN KEY(periodo_ID) REFERENCES periodo(periodo_ID)
) TABLESPACE ts_academico;

-- BITACORA
CREATE TABLE bitacora (
  id_log    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario   VARCHAR2(50),
  fecha     DATE DEFAULT SYSDATE,
  accion    VARCHAR2(20),
  detalle   VARCHAR2(4000)
) TABLESPACE ts_academico;
